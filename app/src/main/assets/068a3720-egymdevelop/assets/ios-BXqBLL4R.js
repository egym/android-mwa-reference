class n{async get(){const e=this.getRaw();return{value:this.textSizePercentageToNumber(e)}}async getPreferred(){throw"Native implementation will be used"}async set(e){const t=this.textSizeNumberToPercentage(e.value);this.setRaw(t)}getRaw(){return typeof document<"u"&&document.body.style.webkitTextSizeAdjust||"100%"}setRaw(e){typeof document<"u"&&(document.body.style.webkitTextSizeAdjust=e)}textSizePercentageToNumber(e){const t=n.TEXT_SIZE_REGEX.exec(e);if(!t)return 1;const r=Number.parseInt(t[1],10);return Number.isNaN(r)?1:r/100}textSizeNumberToPercentage(e){return`${Math.round(e*100)}%`}}n.TEXT_SIZE_REGEX=/(\d+)%/;export{n as TextZoomIOS};
